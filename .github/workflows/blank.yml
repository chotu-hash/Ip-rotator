name: HTTP Proxy via Cloudflare

on:
  workflow_dispatch:

jobs:
  proxy:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt update -y
          sudo apt install -y tinyproxy net-tools jq

      - name: Configure TinyProxy
        run: |
          # Backup original config
          sudo cp /etc/tinyproxy/tinyproxy.conf /etc/tinyproxy/tinyproxy.conf.backup
          
          # Create new config
          sudo tee /etc/tinyproxy/tinyproxy.conf > /dev/null << EOF
          User tinyproxy
          Group tinyproxy
          Port 8888
          Timeout 600
          DefaultErrorFile "/usr/share/tinyproxy/default.html"
          StatFile "/usr/share/tinyproxy/stats.html"
          Logfile "/var/log/tinyproxy/tinyproxy.log"
          LogLevel Info
          PidFile "/var/run/tinyproxy/tinyproxy.pid"
          MaxClients 100
          MinSpareServers 5
          MaxSpareServers 20
          StartServers 10
          MaxRequestsPerChild 0
          Allow 127.0.0.1
          Allow ::1
          # Basic Authentication
          BasicAuth proxyuser proxypass
          # Enable connection to all domains
          ConnectPort 443
          ConnectPort 80
          ConnectPort 21
          ConnectPort 22
          ViaProxyName "tinyproxy"
          DisableViaHeader Yes
          EOF

      - name: Start and test TinyProxy
        run: |
          # Restart tinyproxy
          sudo systemctl restart tinyproxy
          sudo systemctl enable tinyproxy
          
          # Wait for service to start
          sleep 5
          
          echo "=== TinyProxy Status ==="
          sudo systemctl status tinyproxy --no-pager
          
          echo "=== Network Status ==="
          sudo netstat -tlnp | grep 8888 || echo "TinyProxy not listening"
          
          # Test locally
          echo "=== Testing HTTP Proxy Locally ==="
          curl -v --proxy http://proxyuser:proxypass@127.0.0.1:8888 http://ifconfig.me 2>&1 | head -20 || echo "Local test completed"

      - name: Install cloudflared
        run: |
          curl -fsSL https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -o cloudflared
          sudo mv cloudflared /usr/local/bin/cloudflared
          sudo chmod +x /usr/local/bin/cloudflared

      - name: Setup tunnel configuration
        env:
          TUNNEL_CREDS: ${{ secrets.CF_TUNNEL_CREDENTIALS }}
        run: |
          mkdir -p ~/.cloudflared/
          echo "$TUNNEL_CREDS" > ~/.cloudflared/creds.json
          
          TUNNEL_ID=$(jq -r '.TunnelID' ~/.cloudflared/creds.json)
          echo "Tunnel ID: $TUNNEL_ID"
          
          # Create config for HTTP proxy
          cat > ~/.cloudflared/config.yml << EOF
          tunnel: $TUNNEL_ID
          credentials-file: /home/runner/.cloudflared/creds.json
          ingress:
            - hostname: proxy.trendscoop.xyz
              service: http://localhost:8888
              originRequest:
                noTLSVerify: true
            - service: http_status:404
          EOF
          
          echo "=== Config File ==="
          cat ~/.cloudflared/config.yml

      - name: Start Cloudflare Tunnel
        run: |
          # Kill any existing cloudflared processes
          pkill cloudflared || true
          sleep 2
          
          # Start tunnel
          nohup cloudflared tunnel run > tunnel.log 2>&1 &
          sleep 20
          
          echo "=== Tunnel Status ==="
          cloudflared tunnel list 2>&1 || echo "Cannot list tunnels"
          
          echo "=== Tunnel Log ==="
          tail -30 tunnel.log

      - name: Test HTTP Proxy through Tunnel
        run: |
          echo "=== Testing HTTP Proxy via Tunnel ==="
          # This test might not work from within GitHub, but shows the command
          echo "Use this command from your local machine:"
          echo "curl --proxy http://proxyuser:proxypass@proxy.trendscoop.xyz:443 https://ifconfig.me"
          echo ""
          echo "Alternative commands:"
          echo "curl -x http://proxyuser:proxypass@proxy.trendscoop.xyz:443 https://ifconfig.me"
          echo "curl --proxy http://proxyuser:proxypass@proxy.trendscoop.xyz:80 http://ifconfig.me"

      - name: Keep alive with monitoring
        run: |
          echo "üåê HTTP PROXY ACTIVE"
          echo ""
          echo "üìã USAGE COMMANDS:"
          echo "curl --proxy http://proxyuser:proxypass@proxy.trendscoop.xyz:443 https://ifconfig.me"
          echo "curl -x http://proxyuser:proxypass@proxy.trendscoop.xyz:443 https://ifconfig.me"
          echo "wget -e use_proxy=yes -e http_proxy=proxy.trendscoop.xyz:443 https://ifconfig.me"
          echo ""
          echo "üîß CONFIGURATION:"
          echo "Proxy: proxy.trendscoop.xyz:443"
          echo "Username: proxyuser"
          echo "Password: proxypass"
          echo ""
          echo "üìä Monitoring..."
          while true; do
            echo "$(date): HTTP Proxy running - TinyProxy and Cloudflare Tunnel active"
            # Check services
            sudo systemctl is-active tinyproxy > /dev/null && echo "‚úÖ TinyProxy: Active" || echo "‚ùå TinyProxy: Inactive"
            pgrep cloudflared > /dev/null && echo "‚úÖ Cloudflare Tunnel: Active" || echo "‚ùå Cloudflare Tunnel: Inactive"
            echo "---"
            sleep 60
          done
