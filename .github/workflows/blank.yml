name: Local SOCKS5 + Cloudflare Tunnel

on:
  workflow_dispatch:

jobs:
  proxy:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt update -y
          sudo apt install -y git build-essential net-tools jq curl lsof

      - name: Build microsocks
        run: |
          git clone https://github.com/rofl0r/microsocks.git
          cd microsocks
          make
          sudo cp microsocks /usr/local/bin/
          microsocks -h || echo "microsocks help test"
          echo "‚úÖ microsocks built and installed"

      - name: Ensure SOCKS5 user exists
        run: |
          sudo useradd -M -s /usr/sbin/nologin proxyuser || true
          echo "‚úÖ User 'proxyuser' ready for SOCKS5"

      - name: Start local SOCKS5 proxy
        run: |
          pkill microsocks 2>/dev/null || true
          sleep 2

          # Ensure port 1080 is free
          if sudo lsof -i :1080; then
            echo "‚ùå Port 1080 is in use, cannot start microsocks"
            exit 1
          fi

          echo "Starting microsocks..."
          nohup microsocks -i 127.0.0.1 -p 1080 -u proxyuser -P proxypass > microsocks.log 2>&1 &
          MICROSOCKS_PID=$!
          echo "microsocks PID: $MICROSOCKS_PID"

          # Wait and check status
          sleep 5
          if ps -p $MICROSOCKS_PID >/dev/null; then
            echo "‚úÖ microsocks process running"
          else
            echo "‚ùå microsocks failed to start, see microsocks.log"
            tail -20 microsocks.log
            exit 1
          fi

      - name: Test SOCKS5 functionality
        run: |
          echo "=== Testing SOCKS5 Connection ==="
          sleep 3
          timeout 10 bash -c '
            if curl -v --socks5 127.0.0.1:1080 -U proxyuser:proxypass http://httpbin.org/ip 2>&1 | grep -q "origin"; then
              echo "‚úÖ SOCKS5 HTTP test PASSED"
            else
              echo "‚ùå SOCKS5 HTTP test FAILED"
              tail -20 microsocks.log
              exit 1
            fi
          '
          echo "=== microsocks Process Check ==="
          pgrep microsocks && echo "‚úÖ microsocks still running" || echo "‚ùå microsocks not running"

      - name: Install cloudflared
        run: |
          curl -fsSL https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -o cloudflared
          sudo mv cloudflared /usr/local/bin/cloudflared
          sudo chmod +x /usr/local/bin/cloudflared
          echo "‚úÖ cloudflared installed"

      - name: Setup Cloudflare tunnel
        env:
          TUNNEL_CREDS: ${{ secrets.CF_TUNNEL_CREDENTIALS }}
        run: |
          mkdir -p ~/.cloudflared/
          echo "$TUNNEL_CREDS" > ~/.cloudflared/creds.json

          cat > ~/.cloudflared/config.yml << EOF
          tunnel: d09d85ca-86ef-45e3-b340-9f00d90b6244
          credentials-file: /home/runner/.cloudflared/creds.json
          ingress:
            - hostname: proxy.trendscoop.xyz
              service: tcp://localhost:1080
            - service: http_status:404
          EOF
          echo "‚úÖ Cloudflare tunnel config ready"

      - name: Start Cloudflare tunnel
        run: |
          pkill cloudflared 2>/dev/null || true
          sleep 2
          echo "Starting Cloudflare tunnel..."
          nohup cloudflared tunnel run > tunnel.log 2>&1 &
          CLOUDFLARE_PID=$!
          sleep 30
          ps -p $CLOUDFLARE_PID >/dev/null && echo "‚úÖ cloudflared running" || echo "‚ùå cloudflared failed, see tunnel.log"
          tail -20 tunnel.log

      - name: Final verification
        run: |
          echo "=== Final Service Status ==="
          echo "microsocks: $(pgrep microsocks >/dev/null && echo 'RUNNING' || echo 'STOPPED')"
          echo "cloudflared: $(pgrep cloudflared >/dev/null && echo 'RUNNING' || echo 'STOPPED')"
          echo ""
          echo "Test from your local machine:"
          echo "curl --socks5-hostname proxy.trendscoop.xyz:443 -U proxyuser:proxypass https://ifconfig.me"

      - name: Keep alive and monitor services
        run: |
          echo "üåê SERVICES MONITORING"
          echo "microsocks (SOCKS5) ‚Üí 127.0.0.1:1080"
          echo "cloudflared (Tunnel) ‚Üí proxy.trendscoop.xyz:443"
          while true; do
            MICRO_RUNNING=$(pgrep microsocks >/dev/null && echo "‚úÖ" || echo "‚ùå")
            CLOUDFLARE_RUNNING=$(pgrep cloudflared >/dev/null && echo "‚úÖ" || echo "‚ùå")
            echo "$(date) - microsocks: $MICRO_RUNNING cloudflared: $CLOUDFLARE_RUNNING"
            sleep 60
          done
