name: HTTP/HTTPS Proxy via Cloudflare

on:
  workflow_dispatch:

jobs:
  proxy:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt update -y
          sudo apt install -y squid jq curl

      - name: Configure Squid for HTTP/HTTPS
        run: |
          # Create password file
          echo "proxyuser:$(openssl passwd -crypt proxypass)" | sudo tee /etc/squid/passwords
          sudo chown proxy:proxy /etc/squid/passwords

          # Configure Squid
          sudo tee /etc/squid/squid.conf > /dev/null << 'EOF'
          http_port 3128
          
          # Basic settings
          cache deny all
          forwarded_for delete
          via off
          dns_v4_first on
          
          # Authentication
          auth_param basic program /usr/lib/squid/basic_ncsa_auth /etc/squid/passwords
          auth_param basic realm "Squid Proxy"
          auth_param basic credentialsttl 2 hours
          auth_param basic casesensitive off
          
          # ACLs
          acl authenticated proxy_auth REQUIRED
          acl SSL_ports port 443
          acl Safe_ports port 80
          acl Safe_ports port 443
          acl Safe_ports port 21
          acl Safe_ports port 70
          acl Safe_ports port 210
          acl Safe_ports port 1025-65535
          acl Safe_ports port 280
          acl Safe_ports port 488
          acl Safe_ports port 591
          acl Safe_ports port 777
          acl CONNECT method CONNECT
          
          # Access rules
          http_access deny !Safe_ports
          http_access deny CONNECT !SSL_ports
          http_access allow authenticated
          http_access deny all
          
          # Refresh patterns
          refresh_pattern ^ftp:		1440	20%	10080
          refresh_pattern ^gopher:	1440	0%	1440
          refresh_pattern -i (/cgi-bin/|\?) 0	0%	0
          refresh_pattern .		0	20%	4320
          EOF

          # Create necessary directories
          sudo mkdir -p /var/cache/squid
          sudo mkdir -p /var/log/squid
          sudo chown -R proxy:proxy /var/cache/squid /var/log/squid

          # Initialize cache
          sudo squid -z
          
          # Start Squid
          sudo systemctl restart squid
          sudo systemctl enable squid
          
          sleep 5
          echo "=== Squid Status ==="
          sudo systemctl status squid --no-pager
          echo "=== Network Ports ==="
          sudo netstat -tlnp | grep 3128 || echo "Checking ports..."

      - name: Install cloudflared
        run: |
          curl -fsSL https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -o cloudflared
          sudo mv cloudflared /usr/local/bin/cloudflared
          sudo chmod +x /usr/local/bin/cloudflared
          cloudflared --version

      - name: Setup tunnel configuration
        env:
          TUNNEL_CREDS: ${{ secrets.CF_TUNNEL_CREDENTIALS }}
        run: |
          mkdir -p ~/.cloudflared/
          echo "$TUNNEL_CREDS" > ~/.cloudflared/creds.json
          
          TUNNEL_ID=$(jq -r '.TunnelID' ~/.cloudflared/creds.json)
          echo "Tunnel ID: $TUNNEL_ID"
          
          # Create config file
          cat > ~/.cloudflared/config.yml << EOF
          tunnel: $TUNNEL_ID
          credentials-file: /home/runner/.cloudflared/creds.json
          ingress:
            - hostname: proxy.trendscoop.xyz
              service: http://localhost:3128
            - service: http_status:404
          EOF
          
          echo "=== Config Validation ==="
          cloudflared tunnel validate 2>&1 || echo "Validation completed"

      - name: Start Cloudflare Tunnel
        run: |
          # Stop any existing tunnels
          pkill cloudflared || true
          sleep 2
          
          # Start tunnel with debug info
          nohup cloudflared tunnel run > tunnel.log 2>&1 &
          sleep 25
          
          echo "=== Tunnel Status ==="
          cloudflared tunnel list 2>&1 || echo "Tunnel list command completed"
          echo "=== Recent Logs ==="
          tail -20 tunnel.log

      - name: Test proxy locally
        run: |
          echo "=== Testing HTTP Proxy Locally ==="
          curl -v --proxy http://proxyuser:proxypass@127.0.0.1:3128 http://httpbin.org/ip 2>&1 | grep -E "(HTTP|ip|Connected)" || echo "HTTP test completed"
          
          echo "=== Testing HTTPS Proxy Locally ==="
          curl -v --proxy http://proxyuser:proxypass@127.0.0.1:3128 https://httpbin.org/ip 2>&1 | grep -E "(HTTP|ip|Connected)" || echo "HTTPS test completed"

      - name: Final verification
        run: |
          echo "=== Service Status ==="
          sudo systemctl is-active squid && echo "‚úÖ Squid: RUNNING" || echo "‚ùå Squid: STOPPED"
          pgrep cloudflared && echo "‚úÖ Cloudflare Tunnel: RUNNING" || echo "‚ùå Cloudflare Tunnel: STOPPED"
          
          echo "=== Network Verification ==="
          sudo netstat -tlnp | grep -E "(3128|cloudflared)" || echo "Network check completed"

      - name: Keep alive with usage instructions
        run: |
          echo "üåê HTTP/HTTPS PROXY READY"
          echo "=========================================="
          echo ""
          echo "üöÄ USAGE COMMANDS:"
          echo ""
          echo "For HTTP websites:"
          echo "curl --proxy http://proxyuser:proxypass@proxy.trendscoop.xyz:80 http://ifconfig.me"
          echo ""
          echo "For HTTPS websites:"
          echo "curl --proxy http://proxyuser:proxypass@proxy.trendscoop.xyz:443 https://ifconfig.me"
          echo ""
          echo "Alternative syntax:"
          echo "curl -x http://proxyuser:proxypass@proxy.trendscoop.xyz:443 https://ifconfig.me"
          echo ""
          echo "With environment variables:"
          echo "export http_proxy=http://proxyuser:proxypass@proxy.trendscoop.xyz:443"
          echo "export https_proxy=http://proxyuser:proxypass@proxy.trendscoop.xyz:443"
          echo "curl https://ifconfig.me"
          echo ""
          echo "=========================================="
          echo "üîß CONFIGURATION:"
          echo "Proxy Server: proxy.trendscoop.xyz"
          echo "Port: 80 (HTTP) or 443 (HTTPS)"
          echo "Username: proxyuser"
          echo "Password: proxypass"
          echo ""
          echo "üìä Monitoring..."
          COUNTER=0
          while true; do
            echo "$(date) - Proxy active for $((COUNTER * 60)) seconds"
            COUNTER=$((COUNTER + 1))
            sleep 60
          done
