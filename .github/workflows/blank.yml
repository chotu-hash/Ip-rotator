name: Local SOCKS5 + Cloudflare Tunnel

on:
  workflow_dispatch:

jobs:
  proxy:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt update -y
          sudo apt install -y git build-essential net-tools jq

      - name: Build and install microsocks
        run: |
          git clone https://github.com/rofl0r/microsocks.git
          cd microsocks
          make
          sudo cp microsocks /usr/local/bin/
          echo "‚úÖ microsocks installed"

      - name: Start local SOCKS5 proxy
        run: |
          # Start microsocks binding only to localhost (more secure)
          nohup microsocks -i 127.0.0.1 -p 1080 -u proxyuser -P proxypass -v > socks.log 2>&1 &
          
          sleep 3
          echo "=== Local SOCKS5 Status ==="
          netstat -tlnp | grep 1080 || echo "SOCKS5 not listening"
          echo "=== Process Check ==="
          ps aux | grep microsocks | grep -v grep

      - name: Test local SOCKS5 proxy
        run: |
          echo "=== Testing Local SOCKS5 ==="
          # Test HTTP
          timeout 10 curl -v --socks5 127.0.0.1:1080 -U proxyuser:proxypass http://httpbin.org/ip 2>&1 | grep -E "(SOCKS5|Connected|HTTP|ip)" || echo "HTTP test completed"
          
          # Test HTTPS
          timeout 10 curl -v --socks5 127.0.0.1:1080 -U proxyuser:proxypass https://httpbin.org/ip 2>&1 | grep -E "(SOCKS5|Connected|HTTP|ip)" || echo "HTTPS test completed"
          
          echo "=== microsocks Log ==="
          tail -10 socks.log || echo "No log yet"

      - name: Install cloudflared
        run: |
          curl -fsSL https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -o cloudflared
          sudo mv cloudflared /usr/local/bin/cloudflared
          sudo chmod +x /usr/local/bin/cloudflared

      - name: Setup Cloudflare tunnel for local SOCKS5
        env:
          TUNNEL_CREDS: ${{ secrets.CF_TUNNEL_CREDENTIALS }}
        run: |
          mkdir -p ~/.cloudflared/
          echo "$TUNNEL_CREDS" > ~/.cloudflared/creds.json
          
          # Tunnel config that points to local SOCKS5
          cat > ~/.cloudflared/config.yml << EOF
          tunnel: d09d85ca-86ef-45e3-b340-9f00d90b6244
          credentials-file: /home/runner/.cloudflared/creds.json
          ingress:
            # TCP tunnel for SOCKS5 protocol
            - hostname: proxy.trendscoop.xyz
              service: tcp://localhost:1080
            # Fallback
            - service: http_status:404
          EOF
          
          echo "‚úÖ Tunnel configured for local SOCKS5 proxy"

      - name: Start Cloudflare tunnel
        run: |
          # Stop any existing tunnels
          pkill cloudflared 2>/dev/null || true
          sleep 2
          
          # Start tunnel (will expose local SOCKS5 to the internet)
          nohup cloudflared tunnel run > tunnel.log 2>&1 &
          sleep 30  # Give more time for tunnel establishment
          
          echo "=== Tunnel Status ==="
          cloudflared tunnel list 2>&1 | head -10
          echo "=== Tunnel Log ==="
          tail -20 tunnel.log

      - name: Verify setup
        run: |
          echo "=== Final Verification ==="
          echo "Local Services:"
          pgrep microsocks >/dev/null && echo "‚úÖ microsocks (127.0.0.1:1080): RUNNING" || echo "‚ùå microsocks: STOPPED"
          pgrep cloudflared >/dev/null && echo "‚úÖ Cloudflare Tunnel: RUNNING" || echo "‚ùå Cloudflare Tunnel: STOPPED"
          
          echo "Network Status:"
          netstat -tlnp | grep 1080 && echo "‚úÖ SOCKS5 listening locally" || echo "‚ùå SOCKS5 not listening"
          
          echo "=== Architecture ==="
          echo "microsocks ‚îÄ‚îÄ‚îÄ‚ñ∫ 127.0.0.1:1080 (local only)"
          echo "cloudflared ‚îÄ‚îÄ‚ñ∫ proxy.trendscoop.xyz:443 ‚îÄ‚îÄ‚îÄ‚ñ∫ 127.0.0.1:1080"

      - name: Keep alive with monitoring
        run: |
          echo "üåê LOCAL SOCKS5 + CLOUDFLARE TUNNEL ACTIVE"
          echo "=========================================="
          echo ""
          echo "üèóÔ∏è  ARCHITECTURE:"
          echo "microsocks bound to: 127.0.0.1:1080 (localhost only)"
          echo "Cloudflare Tunnel exposes: proxy.trendscoop.xyz:443"
          echo "Tunnel forwards to: localhost:1080"
          echo ""
          echo "üöÄ USAGE:"
          echo "curl --socks5-hostname proxy.trendscoop.xyz:443 -U proxyuser:proxypass https://ifconfig.me"
          echo ""
          echo "üîß SECURITY:"
          echo "‚úÖ SOCKS5 only accessible locally"
          echo "‚úÖ Cloudflare handles external access"
          echo "‚úÖ Authentication required"
          echo ""
          echo "üìä Monitoring local services..."
          COUNTER=0
          while true; do
            echo "$(date) - Services running for $((COUNTER * 60)) seconds"
            if pgrep microsocks >/dev/null; then
              echo "‚úÖ microsocks: ACTIVE (PID: $(pgrep microsocks))"
            else
              echo "‚ùå microsocks: INACTIVE"
            fi
            if pgrep cloudflared >/dev/null; then
              echo "‚úÖ cloudflared: ACTIVE (PID: $(pgrep cloudflared))"
            else
              echo "‚ùå cloudflared: INACTIVE"
            fi
            echo "---"
            COUNTER=$((COUNTER + 1))
            sleep 60
          done
