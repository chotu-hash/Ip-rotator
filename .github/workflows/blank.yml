name: Local SOCKS5 + Cloudflare Tunnel

on:
  workflow_dispatch:

jobs:
  proxy:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt update -y
          sudo apt install -y git build-essential net-tools jq

      - name: Build microsocks with debugging
        run: |
          git clone https://github.com/rofl0r/microsocks.git
          cd microsocks
          make
          sudo cp microsocks /usr/local/bin/
          # Test if microsocks works
          microsocks -h || echo "microsocks help test"
          echo "‚úÖ microsocks built and installed"

      - name: Start local SOCKS5 proxy with error handling
        run: |
          # Kill any existing microsocks processes
          pkill microsocks 2>/dev/null || true
          sleep 2
          
          # Start microsocks with explicit output
          echo "Starting microsocks..."
          microsocks -i 127.0.0.1 -p 1080 -u proxyuser -P proxypass -v &
          MICROSOCKS_PID=$!
          echo "microsocks PID: $MICROSOCKS_PID"
          
          # Wait and check if it's running
          sleep 5
          echo "=== Process Status ==="
          ps -p $MICROSOCKS_PID >/dev/null && echo "‚úÖ microsocks process running" || echo "‚ùå microsocks process died"
          
          echo "=== Network Status (as root) ==="
          sudo netstat -tlnp | grep 1080 || echo "No port 1080 listening (may need root)"
          
          echo "=== Network Status (as user) ==="
          netstat -tln | grep 1080 || echo "Port 1080 not visible to user"
          
          # Alternative port check
          echo "=== Alternative Port Check ==="
          nc -zv 127.0.0.1 1080 && echo "‚úÖ Port 1080 is open" || echo "‚ùå Port 1080 is not accessible"

      - name: Test SOCKS5 functionality
        run: |
          echo "=== Testing SOCKS5 Connection ==="
          # Wait a bit more for microsocks to fully start
          sleep 3
          
          # Test with timeout and better error handling
          timeout 10 bash -c '
            if curl -v --socks5 127.0.0.1:1080 -U proxyuser:proxypass http://httpbin.org/ip 2>&1 | grep -q "origin"; then
              echo "‚úÖ SOCKS5 HTTP test PASSED"
            else
              echo "‚ùå SOCKS5 HTTP test FAILED"
            fi
          ' || echo "‚ö†Ô∏è  SOCKS5 test timed out or failed"
          
          # Check microsocks process again
          echo "=== microsocks Process Check ==="
          pgrep microsocks && echo "‚úÖ microsocks still running" || echo "‚ùå microsocks not running"

      - name: Install cloudflared
        run: |
          curl -fsSL https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -o cloudflared
          sudo mv cloudflared /usr/local/bin/cloudflared
          sudo chmod +x /usr/local/bin/cloudflared

      - name: Setup Cloudflare tunnel
        env:
          TUNNEL_CREDS: ${{ secrets.CF_TUNNEL_CREDENTIALS }}
        run: |
          mkdir -p ~/.cloudflared/
          echo "$TUNNEL_CREDS" > ~/.cloudflared/creds.json
          
          cat > ~/.cloudflared/config.yml << EOF
          tunnel: d09d85ca-86ef-45e3-b340-9f00d90b6244
          credentials-file: /home/runner/.cloudflared/creds.json
          ingress:
            - hostname: proxy.trendscoop.xyz
              service: tcp://localhost:1080
            - service: http_status:404
          EOF

      - name: Start Cloudflare tunnel
        run: |
          pkill cloudflared 2>/dev/null || true
          sleep 2
          
          echo "Starting Cloudflare tunnel..."
          nohup cloudflared tunnel run > tunnel.log 2>&1 &
          sleep 30
          
          echo "=== Tunnel Status ==="
          cloudflared tunnel list 2>&1 | head -10
          echo "=== Tunnel Log ==="
          tail -20 tunnel.log

      - name: Final verification
        run: |
          echo "=== Final Service Status ==="
          echo "microsocks: $(pgrep microsocks && echo 'RUNNING' || echo 'STOPPED')"
          echo "cloudflared: $(pgrep cloudflared && echo 'RUNNING' || echo 'STOPPED')"
          
          echo "=== Testing End-to-End ==="
          echo "If both services are running, test from your local machine:"
          echo "curl --socks5-hostname proxy.trendscoop.xyz:443 -U proxyuser:proxypass https://ifconfig.me"

      - name: Keep alive
        run: |
          echo "üåê SERVICES MONITORING"
          echo "microsocks (SOCKS5) ‚Üí 127.0.0.1:1080"
          echo "cloudflared (Tunnel) ‚Üí proxy.trendscoop.xyz:443"
          echo ""
          while true; do
            MICRO_RUNNING=$(pgrep microsocks >/dev/null && echo "‚úÖ" || echo "‚ùå")
            CLOUDFLARE_RUNNING=$(pgrep cloudflared >/dev/null && echo "‚úÖ" || echo "‚ùå")
            echo "$(date) - microsocks: $MICRO_RUNNING cloudflared: $CLOUDFLARE_RUNNING"
            sleep 60
          done
